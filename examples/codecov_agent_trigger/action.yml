name: Backend Unit Tests

on:
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - "main"
  workflow_dispatch:

jobs:
  unit-tests:
    # changing the following value will significantly affect github's billing. Be careful and consult with the team before changing it.
    runs-on: ubuntu-latest-8
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: ${{ github.event_name != 'push'}}

    steps:
      - uses: actions/checkout@v4
      - name: Setup backend
        id: setup
        uses: ./.github/actions/setup-backend

      - name: Test with pytest
        if: ${{ steps.setup.outputs.skip == 'false' }}
        timeout-minutes: 5
        run: |
          cd path/to/your/package
          ENV=staging \
          PYTHONPATH=. \
          uv run pytest \
            -n auto \
            -vv \
            --cov \
            --cov-report=xml \
            path/to/your/tests

      - name: Publish Test Report (Unit tests)
        uses: mikepenz/action-junit-report@v4
        if: ${{ steps.setup.outputs.skip == 'false' && (success() || failure()) }} # always publish report even if the tests fail
        continue-on-error: true
        with:
          report_paths: "**/build/test-results/test/TEST.xml"
          detailed_summary: true
          check_name: "JUnit Test Report - ${{ github.workflow }}"
          annotate_only: true

      - name: Upload coverage reports to Codecov
        if: ${{ steps.setup.outputs.skip == 'false' && (success() || failure()) }} # always upload coverage reports even if the tests fail
        continue-on-error: true
        uses: codecov/codecov-action@v4.5.0
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: path/to/your/coverage.xml
          disable_search: true
          name: ${{ github.workflow }}

      - name: Codecov Agent Trigger
        if: ${{ steps.setup.outputs.skip == 'false' && (success() || failure()) }}
        continue-on-error: true
        env:
          PR_NUMBER: ${{ github.event.number }}
          REPO: ${{ github.repository }}
          TOKEN: ${{ secrets.CODEGEN_AGENT_TOKEN }}
        run: |
          cd path/to/your/package
          uv run python process_coverage_report.py coverage.xml $PR_NUMBER $REPO $TOKEN
